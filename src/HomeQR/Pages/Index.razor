@page "/"
@using HomeQR.Components;
@using HomeQR.Components;
@using HomeQR.Data
@inject QrCodesService QrCodesService
@inject NavigationManager NavigationManager

<PageTitle>QR Codes</PageTitle>

<Modal @ref="modal" />
<AddModal @ref="addModal" OnSubmit="HandleModalSubmit"/>

<h1>
    QR Codes
</h1>

<p>All registered QR codes</p>

@if (qrCodes == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped table-bordered table-responsive">
        <thead>
            <tr>
                <th>Name</th>
                <th>Identifier</th>
                <th>Code</th>
                <th>Href</th>
                <th>
                    <button class="btn btn-success" @onclick="() => addModal.Open()">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z" />
                        </svg>
                    </button>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var qrCode in qrCodes)
            {
                <tr>
                    <td class="align-middle">@qrCode.Name</td>
                    <td class="align-middle"><a href="/qrcode/@qrCode.Uuid">@qrCode.Uuid</a></td>
                    <td class="align-middle"><img src="@GetQrCodeImage(qrCode.GetQrCode(NavigationManager))" alt="QR Code" /></td>
                    <td class="align-middle">@qrCode.Href</td>
                    <td class="align-middle">
                        <button class="btn btn-warning">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                                <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z" />
                            </svg>
                        </button>
                        <button class="btn btn-danger" @onclick="async () => await QrCodesService.Remove(qrCode)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
                                <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z" />
                            </svg>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<QrCode>? qrCodes;

    private AddModal addModal { get; set; }
    private Modal modal { get; set; }

    protected override async Task OnInitializedAsync()
        => await GetQrCodes();

    private string GetQrCodeImage(byte[] code)
        => $"data:image/png;base64,{Convert.ToBase64String(code)}";

    private async Task GetQrCodes()
    {
        qrCodes = await QrCodesService.GetAll();
        StateHasChanged();
    }

    private async Task HandleModalSubmit()
        => await GetQrCodes();
}
