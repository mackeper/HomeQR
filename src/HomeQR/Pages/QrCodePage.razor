@page "/qrcode/{Uuid}"
@using HomeQR.Components;
@using HomeQR.Data
@using HomeQR.Data.Targets
@inject QrCodesService QrCodesService
@inject NavigationManager NavigationManager

<PageTitle>QR Codes</PageTitle>

<AddTargetModal @ref="addTargetModal" OnSubmit="HandleModalSubmit" QrCode="qrCode" />

<h1>
    QR Codes
</h1>

@if (qrCode is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="card" style="width: 24rem;">
        <div class="text-center">
            <img class="card-img-top rounded m-3" style="width: 100px; height:100px" src="@GetQrCodeImage(qrCode.GetQrCode(NavigationManager))" alt="Card image cap" />
        </div>
        <div class="card-body">
            <h5 class="card-title">@qrCode.Name</h5>
            <p class="card-text">@qrCode.Uuid</p>
        </div>
        <ul class="list-group list-group-flush">
            @foreach (var target in qrCode.Targets)
            {
                @if (target is UrlTarget urlTarget)
                {
                    <li class="list-group-item">
                        <div class="d-inline-block align-middle">
                            <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" fill="currentColor" class="bi bi-link-45deg" viewBox="0 0 16 16">
                                <path d="M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z" />
                                <path d="M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z" />
                            </svg>
                        </div>
                        <div class="d-inline-block align-middle">
                            <div>@urlTarget.Name</div>
                            <div><a href="@urlTarget.Url">@urlTarget.Url</a></div>
                        </div>
                    </li>
                }

                @if (target is PdfTarget pdfTarget)
                {
                    <li class="list-group-item">
                        <div class="d-inline-block align-middle">
                            <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" fill="currentColor" class="bi bi-filetype-pdf" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M14 4.5V14a2 2 0 0 1-2 2h-1v-1h1a1 1 0 0 0 1-1V4.5h-2A1.5 1.5 0 0 1 9.5 3V1H4a1 1 0 0 0-1 1v9H2V2a2 2 0 0 1 2-2h5.5L14 4.5ZM1.6 11.85H0v3.999h.791v-1.342h.803c.287 0 .531-.057.732-.173.203-.117.358-.275.463-.474a1.42 1.42 0 0 0 .161-.677c0-.25-.053-.476-.158-.677a1.176 1.176 0 0 0-.46-.477c-.2-.12-.443-.179-.732-.179Zm.545 1.333a.795.795 0 0 1-.085.38.574.574 0 0 1-.238.241.794.794 0 0 1-.375.082H.788V12.48h.66c.218 0 .389.06.512.181.123.122.185.296.185.522Zm1.217-1.333v3.999h1.46c.401 0 .734-.08.998-.237a1.45 1.45 0 0 0 .595-.689c.13-.3.196-.662.196-1.084 0-.42-.065-.778-.196-1.075a1.426 1.426 0 0 0-.589-.68c-.264-.156-.599-.234-1.005-.234H3.362Zm.791.645h.563c.248 0 .45.05.609.152a.89.89 0 0 1 .354.454c.079.201.118.452.118.753a2.3 2.3 0 0 1-.068.592 1.14 1.14 0 0 1-.196.422.8.8 0 0 1-.334.252 1.298 1.298 0 0 1-.483.082h-.563v-2.707Zm3.743 1.763v1.591h-.79V11.85h2.548v.653H7.896v1.117h1.606v.638H7.896Z" />
                            </svg>

                        </div>
                        <div class="d-inline-block align-middle">
                            <div>@pdfTarget.Name</div>
                            <div>@pdfTarget.FileName</div>
                        </div>
                    </li>
                }
            }
            <li class="list-group-item">
                <button class="btn btn-success" @onclick="() => addTargetModal.Open()">
                    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z" />
                    </svg>
                </button>
            </li>
        </ul>
    </div>
}

@code {
    [Parameter]
    public string Uuid { get; set; }

    private AddTargetModal addTargetModal { get; set; }

    private QrCode? qrCode;

    protected override async Task OnInitializedAsync() =>
         await GetQrCode();

    private string GetQrCodeImage(byte[] code)
    {
        return $"data:image/png;base64,{Convert.ToBase64String(code)}";
    }

    private async Task GetQrCode()
    {
        qrCode = await QrCodesService.Get(Guid.Parse(Uuid));
        StateHasChanged();
    }

    private async Task HandleModalSubmit()
        => await GetQrCode();
}
